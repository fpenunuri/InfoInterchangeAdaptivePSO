% fob = fob4R(XMAT), objective function for the optimal synthesis of the 
% planar 4R mechanism for the path generation task without prescribed 
% timing an unspecified trajectory. This function requires the auxiliary 
% function: CouplerPoint4R
%
% XMAT is an m x (np + 9) matrix where the rows represent the individuals 
% x = [th, x0, y0, r1, r2, r3, r4, rcx, rcy, psi]; np represents the number 
% of desired points (or the number of input angles). th are the input 
% angles, generally th a matrix of m x np

% Universidad Autonoma de Yucatan
% F. Penunuri
function [fob_vals] = fob4R(XMAT)
    %------------------------------------    
    % inicializacion de ciertos parametros    
    circuit = -1;
    
    % desired points
    xd=[0.7429, 0.6551, 0.6014, 0.5189, 0.4159, 0.3001, 0.1964, 0.1639, ...
    0.1605, 0.1934, 0.2619, 0.4201, 0.6474, 0.7429];

    yd=[0.1880, 0.1573, 0.1388, 0.1149, 0.1012, 0.1074, 0.1375, 0.1662, ...
    0.2003, 0.2256, 0.2251, 0.1808, 0.1607, 0.1880];
    %------------------------------------
        
    desired_pts = cat(2,xd(:),yd(:));        

    [~,np] = size(xd);
    
   % unprescribed timing
   % th_in -> [th_1,th_2,...,th_np];
   thmat = XMAT(:,1:np);
   
   [~,nc] = size(XMAT);
    
   rest_pars = XMAT(:, (np+1):nc); 
   n2c_rest_pars = num2cell(rest_pars,1);
      
    [x0, y0, r1 ,r2, r3, r4, rcx, rcy, psi] = n2c_rest_pars{:};
    
    %avoiding the order defect problem
    thmat = to_cyclic_order(thmat);
    rgmat = CouplerPoint4R(thmat,x0,y0,r1,r2,r3,r4,rcx,rcy,psi,circuit);

    % points generated by each mechanism (the same mechanism at different 
    % input angles).
    % rgpmat2(:,:,kth mecanismo)
    rgmat2 = permute(rgmat,[3,2,1]);

    ErrMat = bsxfun(@minus,desired_pts,rgmat2);
    ErrMat2 = ErrMat.^2;

    fobx = sum(sum(ErrMat2,1),2);
  
    fob_vals = fobx(:);
    
    % penalizing individuals that do not meet the Grashof condition
    Gcv = XMAT(:,np+3:np+6);
    fob_vals(~isGrashof(Gcv)) = 1.0*10^10;
    
    % penalizing individuals that do not meet the crank condition
    links = XMAT(:,np+3:np+6);
    fob_vals(~isCrankCond(links)) = 1.0*10^10;    
end



